package com.training.java8;

import java.util.Arrays;
import java.util.Collection;
import java.util.List;
import java.util.function.IntSupplier;

public class MethodReference {

	public static void main(String[] args) {
		List<String>arr= new ArrayList<>();
		Collection<String> c = arr;
		 
		// bounded non static method reference
				List<String> str = Arrays.asList("life","of","pie");
				str.stream().forEach(s -> { IntSupplier i= s::length; System.out.println(i.getAsInt());} );
				// un bounded non static method reference
						List<String> str2 = Arrays.asList("life","of","pie");
						str2.stream().mapToInt(String::length).forEach(System.out::println);;
						//Method reference example based on real life example.
						// this is also poly expression example
						Myfunction<String> a =  s -> {   return  s.substring(3); };
						System.out.println(a.apply("This is test"));
						
	}

}
